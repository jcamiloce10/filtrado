from matplotlib import pyplot as plt
from pickle import loads
from scipy import signal
import redis
import numpy

fs = 500
fc = 60
Q = 0.6
t = numpy.arange(0,200,1)

bbut,abut = signal.butter(4,[0.05,100],'bandpass',fs=fs)
bnot,anot = signal.iirnotch(fc,Q,fs)
zib = signal.lfilter_zi(bbut,abut)
zin = signal.lfilter_zi(bnot,anot)
datosdeco = [0.012659905712465627, 0.012841011742261516, 0.011913448508369643, 0.011528363537758908, 0.010652474310186321, 0.010261905769115318, 0.011032816733371958, 0.011982215446033548, 0.012301250563442672, 0.013031652268443276, 0.010944289181436816, 0.010944289181436816, 0.010383927562240207, 0.010651683885615472, 0.011865874829511638, 0.011994812837631461, 0.013002801771607269, 0.012438191620342346, 0.01194383045281167, 0.011135028510689933, 0.010663540254178214, 0.010297919488624649, 0.011619953984906093, 0.01181637449076219, 0.012809493562498893, 0.012761574072891142, 0.01230905600607981, 0.0113389580499691, 0.011004855464178157, 0.010161472447081755, 0.011357286019705672, 0.011675678917150982, 0.012480429933347114, 0.01287327094505931, 0.012706639565217103, 0.011557905656094408, 0.01133194303190281, 0.01033828054327365, 0.011069620877452137, 0.011607010782558432, 0.012234015073384787, 0.012745913786081187, 0.012987388492475705, 0.011870716180008092, 0.01146977331644469, 0.010585634032413862, 0.010699850382901612, 0.011365585477699593, 0.012027615457321715, 0.0125772075417405, 0.013217649050271296, 0.012253775687656026, 0.01156279640812654, 0.011031581694980006, 0.010571356988602893, 0.011089875507080156, 0.011741333558067167, 0.012232039011957664, 0.01307324836148423, 0.012630709404879873, 0.011576727641187761, 0.01117109163173494, 0.010452645098368435, 0.011974261798789375, 0.011974261798789375, 0.012763352528175554, 0.01297923723908882, 0.011726315491221027, 0.011333820290258579, 0.010626933716240747, 0.010513161979574099, 0.010996654809255595, 0.011824278736470685, 0.012355345245010184, 0.013218390073306467, 0.012039916439705561, 0.011478467986724035, 0.010853983174217261, 0.010521214429889628, 0.010608210534218749, 0.011621930046333216, 0.01195262392616237, 0.013216167004200953, 0.012427076274814776, 0.011698601229705617, 0.010987367320548112, 0.010683794883806231, 0.010291052675165393, 0.01141666666559074, 0.011695884145243321, 0.012908741247676181, 0.01267922171291576, 0.0120078054415148, 0.011193766936611185, 0.011079007169230975, 0.010214529696400028, 0.011249195459642005, 0.011737529639819954, 0.012871838300524645, 0.013277622514584501, 0.012872282914345749, 0.012012004572047439, 0.01209149164295349, 0.011170251805628412, 0.011827440434754083, 0.012623200371456804, 0.013658557756198276, 0.014192489553807103, 0.013830277494215327, 0.01243809281727099, 0.01208837934620577, 0.011001545561287726, 0.010712447774499525, 0.011263768912667043, 0.011803777099164277, 0.012236781559382761, 0.010991220640331005, 0.010991220640331005, 0.01045511517515234, 0.009747191168885267, 0.01038565661598894, 0.011238376523328503, 0.011990267896349077, 0.012617420391782467, 0.01210932559733328, 0.011392114102358727, 0.011189716010685581, 0.01018103545521028, 0.010590623587517348, 0.011464388549055777, 0.012214995482148721, 0.012745370369188727, 0.012780988876412632, 0.01173451614614359, 0.011570700653835034, 0.01054838527451258, 0.01046208079168295, 0.011191247458291602, 0.012146821362912954, 0.012446540479871943, 0.013077052279731443, 0.012040015242776916, 0.011763613650657987, 0.010878683942056308, 0.010437281220772547, 0.010813424513425547, 0.012041447887311582, 0.01234689758240923, 0.011949116417129226, 0.011167781728844509, 0.010624710647135233, 0.010451854673797585, 0.011847102245953964, 0.012228235093710451, 0.0113648938562001, 0.01092551659787914, 0.010274206751499163, 0.011557263436130593, 0.011873433264470388, 0.012670922254921842, 0.012937789350654899, 0.012551321137045178, 0.011544023824568863, 0.011182799795690649, 0.010274700766855945, 0.011171437442484687, 0.011751016259060073, 0.012338548722879632, 0.012950633749931204, 0.011815880475405409, 0.011413455565771665, 0.010570912374781789, 0.01084469568550978, 0.011579494127185735, 0.013138112577829566, 0.012184415931563983, 0.01154516005988946, 0.010965877652528142, 0.01061650999221267, 0.011397054255926537, 0.011906235884160642, 0.012556903510576803, 0.013207126523171861, 0.01266341322149877, 0.0116715785896897, 0.011338068822326894, 0.010596848181012789, 0.011177513831373092, 0.011737826049034023, 0.012373870820889468, 0.013054525179462232, 0.013134605068796422, 0.011909298779372683, 0.011635169657894946, 0.010782103939805637, 0.01098277297773005, 0.011499216631708834, 0.012093764113594682, 0.012793536866474869, 0.012280501918457873]
datos1 = datosdeco[0:51]
datos2 = datosdeco[51:102]
datos3 = datosdeco[102:153]
datos4 = datosdeco[153:]

#FILTRADO DE MUESTRAS COMPLETAS
z,_ = signal.lfilter(bbut,abut,datosdeco,zi=zib*datosdeco[0])
z1,_ = signal.lfilter(bbut,abut,z,zi=zib*z[0])
z2, _ = signal.lfilter(bnot,anot,z1,zi=zin*z1[0])
z3, _ = signal.lfilter(bnot,anot,z2,zi=zin*z2[0])
y1=signal.filtfilt(bbut,abut,datosdeco)
ytotal = signal.filtfilt(bnot,anot,y1)

#FILTRADO DE MUESTRAS 0:51
zdatos1,_ = signal.lfilter(bbut,abut,datos1,zi=zib*datos1[0])
z1datos1,_ = signal.lfilter(bbut,abut,zdatos1,zi=zib*zdatos1[0])
z2datos1,_ = signal.lfilter(bnot,anot,z1datos1,zi=zin*z1datos1[0])
z3datos1,_ = signal.lfilter(bnot,anot,z2datos1,zi=zin*z2datos1[0])
listadatos1 = z3datos1.tolist()
y1datos1 = signal.filtfilt(bbut,abut,datos1)
ytotaldatos1 = signal.filtfilt(bnot,anot,y1datos1)
listaytotaldatos1 = ytotaldatos1.tolist()

#FILTRADO DE MUESTRAS 51:102
zdatos2,_ = signal.lfilter(bbut,abut,datos2,zi=zib*datos2[0])
z1datos2,_ = signal.lfilter(bbut,abut,zdatos2,zi=zib*zdatos2[0])
z2datos2,_ = signal.lfilter(bnot,anot,z1datos2,zi=zin*z1datos2[0])
z3datos2,_ = signal.lfilter(bnot,anot,z2datos2,zi=zin*z2datos2[0])
listadatos2 = z3datos2.tolist()
y1datos2 = signal.filtfilt(bbut,abut,datos2)
ytotaldatos2 = signal.filtfilt(bnot,anot,y1datos2)
listaytotaldatos2 = ytotaldatos2.tolist()

#FILTRADO DE MUESTRAS 102:153
zdatos3,_ = signal.lfilter(bbut,abut,datos3,zi=zib*datos3[0])
z1datos3,_ = signal.lfilter(bbut,abut,zdatos3,zi=zib*zdatos3[0])
z2datos3,_ = signal.lfilter(bnot,anot,z1datos3,zi=zin*z1datos3[0])
z3datos3,_ = signal.lfilter(bnot,anot,z2datos3,zi=zin*z2datos3[0])
listadatos3 = z3datos3.tolist()
y1datos3 = signal.filtfilt(bbut,abut,datos3)
ytotaldatos3 = signal.filtfilt(bnot,anot,y1datos3)
listaytotaldatos3 = ytotaldatos3.tolist()

#FILTRADO DE MUESTRAS 102:153
zdatos4,_ = signal.lfilter(bbut,abut,datos4,zi=zib*datos4[0])
z1datos4,_ = signal.lfilter(bbut,abut,zdatos4,zi=zib*zdatos4[0])
z2datos4,_ = signal.lfilter(bnot,anot,z1datos4,zi=zin*z1datos4[0])
z3datos4,_ = signal.lfilter(bnot,anot,z2datos4,zi=zin*z2datos4[0])
listadatos4 = z3datos4.tolist()
y1datos4 = signal.filtfilt(bbut,abut,datos4)
ytotaldatos4 = signal.filtfilt(bnot,anot,y1datos4)
listaytotaldatos4 = ytotaldatos4.tolist()

#UNION DE MUESTRAS FILTRADAS

unionlfilter = listadatos1 + listadatos2 + listadatos3 + listadatos4

unionfiltfilter = listaytotaldatos1 +listaytotaldatos2 +listaytotaldatos3 +listaytotaldatos4
print(len(unionfiltfilter))

#PRESENTACION DE FIGURAS
#DATOS SIN FILTRAR
plt.figure(figsize=(10,5))
plt.title('DATOS SIN FILTRAR')
plt.plot(t,datosdeco,'b',linewidth=1.75,alpha=0.75)
#DATOS FILTRADOS DE MANERA COMPLETA (0:200)
plt.figure(figsize=(10,5))
plt.title('DATOS FILTRADOS DE MANERA COMPLETA (0:200)')
plt.plot(t,z3,'r',linewidth=1.75)
plt.plot(t,ytotal,'k',linewidth=1.75)
plt.legend(('datos filtrados con LFILTER','datos filtrados con FILTFILTER'),loc='best')
#DATOS FILTRADOS POR PARTES Y UNIDOS
plt.figure(figsize=(10,5))
plt.title('DATOS FILTRADOS POR PARTES Y UNIDOS')
plt.plot(t,unionlfilter,'r',linewidth=1.75)
plt.plot(t,unionfiltfilter,'k',linewidth=1.75)
plt.legend(('datos filtrados con LFILTER','datos filtrados con FILTFILTER'),loc='best')
plt.grid(True)
plt.show()

